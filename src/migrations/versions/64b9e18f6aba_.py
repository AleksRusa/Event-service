"""empty message

Revision ID: 64b9e18f6aba
Revises: 
Create Date: 2025-04-06 16:22:32.244014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64b9e18f6aba'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_programms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('way_to_start_image', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('creation_datetime', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('latitude'),
    sa.UniqueConstraint('longitude'),
    sa.UniqueConstraint('name')
    )
    op.create_table('participant_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('min_age', sa.Integer(), nullable=False),
    sa.Column('max_age', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('max_age >= 0 AND max_age <= 100', name='max_age_check'),
    sa.CheckConstraint('min_age <= max_age', name='age_range_check'),
    sa.CheckConstraint('min_age >= 0 AND min_age <= 100', name='min_age_check'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('type', sa.Enum('COMPETITION', 'TRAINING_CAMP', name='typeenum'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('TRAINING', 'LOCAL', 'REGION', 'INTERREGION', 'ALL_RUSSIA', name='statusenum'), nullable=False),
    sa.Column('event_logo_path', sa.String(length=255), nullable=False),
    sa.Column('programm_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('organizer_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['programm_id'], ['event_programms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_participant_groups',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['participant_groups.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'group_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_participant_groups')
    op.drop_table('events')
    op.drop_table('participant_groups')
    op.drop_table('locations')
    op.drop_table('event_programms')
    # ### end Alembic commands ###
